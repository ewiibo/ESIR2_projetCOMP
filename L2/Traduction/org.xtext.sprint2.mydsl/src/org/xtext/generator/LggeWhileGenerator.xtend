/*
 * generated by Xtext 2.12.0
 */
package org.xtext.generator


import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.xtext.sprint2.mydsl.Function
import org.xtext.sprint2.mydsl.Definition
import org.xtext.sprint2.mydsl.Program




	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		for (p : resource.allContents.toIterable.filter(Program)) {
				fsa.generateFile(outputfile,p.compile())	
		}
	}
	
	
	def compile(Program prog){
		var functi ='''public static void main (args[]) {'''		
		for (func : prog.functions){
			functi += func.compile()
		}
		return functi
	}
	
	def compile(Function func){
		return '''
		«func.symbol»(«func.definition.vars»);
		} 
		public static «func.symbol»(param) {
		«func.definition.compile()»
		'''
	}
	
	def compile (Definition d){
		'''
        System.out.println(param)
		} 	
		}
		'''
	}
