package org.xtext.generator;


import org.antlr.runtime.tree.TreeIterator;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.xtext.whileL.Function;
import org.xtext.whileL.Program;

public class WhileLGen extends AbstractGenerator{

	@Override
	public void doGenerate(Resource input, IFileSystemAccess2 fsa, IGeneratorContext context) {
		// TODO Auto-generated method stub
		TreeIterator asa = (TreeIterator) input.getAllContents();
		while(asa.hasNext()) {
			EObject objet = (EObject) asa.next();
			if(objet instanceof Program) {
				functions((Program)objet);
			}
		}
	}
	
	public void functions(Program prog) {
		System.out.println("Dans functions");
		for(Function f : prog.getFunctions()) {
			Func funct = new Func(f.getSymbol());
			if(!Func.isDuplicate(f.getDefinition().getInput().getVars())) {
				funct.setIn(f.getDefinition().getInput().getVars().size());
			}
			if(!Func.isDuplicate(f.getDefinition().getOutput().getVars())) {
				funct.setOut(f.getDefinition().getOutput().getVars().size());
			}
		}
	}

}
