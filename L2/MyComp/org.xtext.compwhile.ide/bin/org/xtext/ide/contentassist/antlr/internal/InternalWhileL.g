/*
 * generated by Xtext 2.23.0
 */
grammar InternalWhileL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.services.WhileLGrammarAccess;

}
@parser::members {
	private WhileLGrammarAccess grammarAccess;

	public void setGrammarAccess(WhileLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getFunctionsAssignment()); }
		(rule__Program__FunctionsAssignment)*
		{ after(grammarAccess.getProgramAccess().getFunctionsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinition
entryRuleDefinition
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinitionAccess().getGroup()); }
		(rule__Definition__Group__0)
		{ after(grammarAccess.getDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInput
entryRuleInput
:
{ before(grammarAccess.getInputRule()); }
	 ruleInput
{ after(grammarAccess.getInputRule()); } 
	 EOF 
;

// Rule Input
ruleInput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputAccess().getGroup()); }
		(rule__Input__Group__0)
		{ after(grammarAccess.getInputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutput
entryRuleOutput
:
{ before(grammarAccess.getOutputRule()); }
	 ruleOutput
{ after(grammarAccess.getOutputRule()); } 
	 EOF 
;

// Rule Output
ruleOutput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputAccess().getGroup()); }
		(rule__Output__Group__0)
		{ after(grammarAccess.getOutputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommands
entryRuleCommands
:
{ before(grammarAccess.getCommandsRule()); }
	 ruleCommands
{ after(grammarAccess.getCommandsRule()); } 
	 EOF 
;

// Rule Commands
ruleCommands 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandsAccess().getGroup()); }
		(rule__Commands__Group__0)
		{ after(grammarAccess.getCommandsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommand
entryRuleCommand
:
{ before(grammarAccess.getCommandRule()); }
	 ruleCommand
{ after(grammarAccess.getCommandRule()); } 
	 EOF 
;

// Rule Command
ruleCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandAccess().getAlternatives()); }
		(rule__Command__Alternatives)
		{ after(grammarAccess.getCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNopCommand
entryRuleNopCommand
:
{ before(grammarAccess.getNopCommandRule()); }
	 ruleNopCommand
{ after(grammarAccess.getNopCommandRule()); } 
	 EOF 
;

// Rule NopCommand
ruleNopCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNopCommandAccess().getExprAssignment()); }
		(rule__NopCommand__ExprAssignment)
		{ after(grammarAccess.getNopCommandAccess().getExprAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhileCommand
entryRuleWhileCommand
:
{ before(grammarAccess.getWhileCommandRule()); }
	 ruleWhileCommand
{ after(grammarAccess.getWhileCommandRule()); } 
	 EOF 
;

// Rule WhileCommand
ruleWhileCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileCommandAccess().getGroup()); }
		(rule__WhileCommand__Group__0)
		{ after(grammarAccess.getWhileCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfCommand
entryRuleIfCommand
:
{ before(grammarAccess.getIfCommandRule()); }
	 ruleIfCommand
{ after(grammarAccess.getIfCommandRule()); } 
	 EOF 
;

// Rule IfCommand
ruleIfCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfCommandAccess().getGroup()); }
		(rule__IfCommand__Group__0)
		{ after(grammarAccess.getIfCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForCommand
entryRuleForCommand
:
{ before(grammarAccess.getForCommandRule()); }
	 ruleForCommand
{ after(grammarAccess.getForCommandRule()); } 
	 EOF 
;

// Rule ForCommand
ruleForCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForCommandAccess().getGroup()); }
		(rule__ForCommand__Group__0)
		{ after(grammarAccess.getForCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAffectCommand
entryRuleAffectCommand
:
{ before(grammarAccess.getAffectCommandRule()); }
	 ruleAffectCommand
{ after(grammarAccess.getAffectCommandRule()); } 
	 EOF 
;

// Rule AffectCommand
ruleAffectCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAffectCommandAccess().getGroup()); }
		(rule__AffectCommand__Group__0)
		{ after(grammarAccess.getAffectCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForeachCommand
entryRuleForeachCommand
:
{ before(grammarAccess.getForeachCommandRule()); }
	 ruleForeachCommand
{ after(grammarAccess.getForeachCommandRule()); } 
	 EOF 
;

// Rule ForeachCommand
ruleForeachCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForeachCommandAccess().getGroup()); }
		(rule__ForeachCommand__Group__0)
		{ after(grammarAccess.getForeachCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprs
entryRuleExprs
:
{ before(grammarAccess.getExprsRule()); }
	 ruleExprs
{ after(grammarAccess.getExprsRule()); } 
	 EOF 
;

// Rule Exprs
ruleExprs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprsAccess().getGroup()); }
		(rule__Exprs__Group__0)
		{ after(grammarAccess.getExprsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVars
entryRuleVars
:
{ before(grammarAccess.getVarsRule()); }
	 ruleVars
{ after(grammarAccess.getVarsRule()); } 
	 EOF 
;

// Rule Vars
ruleVars 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarsAccess().getGroup()); }
		(rule__Vars__Group__0)
		{ after(grammarAccess.getVarsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpr
entryRuleExpr
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprAccess().getGroup()); }
		(rule__Expr__Group__0)
		{ after(grammarAccess.getExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLExpr
entryRuleLExpr
:
{ before(grammarAccess.getLExprRule()); }
	 ruleLExpr
{ after(grammarAccess.getLExprRule()); } 
	 EOF 
;

// Rule LExpr
ruleLExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getLExprAccess().getExprAssignment()); }
			(rule__LExpr__ExprAssignment)
			{ after(grammarAccess.getLExprAccess().getExprAssignment()); }
		)
		(
			{ before(grammarAccess.getLExprAccess().getExprAssignment()); }
			(rule__LExpr__ExprAssignment)*
			{ after(grammarAccess.getLExprAccess().getExprAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprBase
entryRuleExprBase
:
{ before(grammarAccess.getExprBaseRule()); }
	 ruleExprBase
{ after(grammarAccess.getExprBaseRule()); } 
	 EOF 
;

// Rule ExprBase
ruleExprBase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprBaseAccess().getAlternatives()); }
		(rule__ExprBase__Alternatives)
		{ after(grammarAccess.getExprBaseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getWhileCommandParserRuleCall_0()); }
		ruleWhileCommand
		{ after(grammarAccess.getCommandAccess().getWhileCommandParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getIfCommandParserRuleCall_1()); }
		ruleIfCommand
		{ after(grammarAccess.getCommandAccess().getIfCommandParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getForCommandParserRuleCall_2()); }
		ruleForCommand
		{ after(grammarAccess.getCommandAccess().getForCommandParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getAffectCommandParserRuleCall_3()); }
		ruleAffectCommand
		{ after(grammarAccess.getCommandAccess().getAffectCommandParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getForeachCommandParserRuleCall_4()); }
		ruleForeachCommand
		{ after(grammarAccess.getCommandAccess().getForeachCommandParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getNopCommandParserRuleCall_5()); }
		ruleNopCommand
		{ after(grammarAccess.getCommandAccess().getNopCommandParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__OpeAlternatives_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAccess().getOpeEqualsSignQuestionMarkKeyword_1_0_0_0()); }
		'=?'
		{ after(grammarAccess.getExprAccess().getOpeEqualsSignQuestionMarkKeyword_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExprAccess().getOpeAndKeyword_1_0_0_1()); }
		'and'
		{ after(grammarAccess.getExprAccess().getOpeAndKeyword_1_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getExprAccess().getOpeOrKeyword_1_0_0_2()); }
		'or'
		{ after(grammarAccess.getExprAccess().getOpeOrKeyword_1_0_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getValueAssignment_0()); }
		(rule__ExprBase__ValueAssignment_0)
		{ after(grammarAccess.getExprBaseAccess().getValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getExprBaseAccess().getValueAssignment_1()); }
		(rule__ExprBase__ValueAssignment_1)
		{ after(grammarAccess.getExprBaseAccess().getValueAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getExprBaseAccess().getValueAssignment_2()); }
		(rule__ExprBase__ValueAssignment_2)
		{ after(grammarAccess.getExprBaseAccess().getValueAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getExprBaseAccess().getValueAssignment_3()); }
		(rule__ExprBase__ValueAssignment_3)
		{ after(grammarAccess.getExprBaseAccess().getValueAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getExprBaseAccess().getGroup_4()); }
		(rule__ExprBase__Group_4__0)
		{ after(grammarAccess.getExprBaseAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getExprBaseAccess().getGroup_5()); }
		(rule__ExprBase__Group_5__0)
		{ after(grammarAccess.getExprBaseAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getExprBaseAccess().getGroup_6()); }
		(rule__ExprBase__Group_6__0)
		{ after(grammarAccess.getExprBaseAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getExprBaseAccess().getGroup_7()); }
		(rule__ExprBase__Group_7__0)
		{ after(grammarAccess.getExprBaseAccess().getGroup_7()); }
	)
	|
	(
		{ before(grammarAccess.getExprBaseAccess().getGroup_8()); }
		(rule__ExprBase__Group_8__0)
		{ after(grammarAccess.getExprBaseAccess().getGroup_8()); }
	)
	|
	(
		{ before(grammarAccess.getExprBaseAccess().getGroup_9()); }
		(rule__ExprBase__Group_9__0)
		{ after(grammarAccess.getExprBaseAccess().getGroup_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
	'function'
	{ after(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getSymbolAssignment_1()); }
	(rule__Function__SymbolAssignment_1)
	{ after(grammarAccess.getFunctionAccess().getSymbolAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getFunctionAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getDefinitionAssignment_3()); }
	(rule__Function__DefinitionAssignment_3)
	{ after(grammarAccess.getFunctionAccess().getDefinitionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__0__Impl
	rule__Definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getReadKeyword_0()); }
	'read'
	{ after(grammarAccess.getDefinitionAccess().getReadKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__1__Impl
	rule__Definition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getInputAssignment_1()); }
	(rule__Definition__InputAssignment_1)
	{ after(grammarAccess.getDefinitionAccess().getInputAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__2__Impl
	rule__Definition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getPercentSignKeyword_2()); }
	'%'
	{ after(grammarAccess.getDefinitionAccess().getPercentSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__3__Impl
	rule__Definition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getCommandsAssignment_3()); }
	(rule__Definition__CommandsAssignment_3)
	{ after(grammarAccess.getDefinitionAccess().getCommandsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__4__Impl
	rule__Definition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getPercentSignKeyword_4()); }
	'%'
	{ after(grammarAccess.getDefinitionAccess().getPercentSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__5__Impl
	rule__Definition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getWriteKeyword_5()); }
	'write'
	{ after(grammarAccess.getDefinitionAccess().getWriteKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getOutputAssignment_6()); }
	(rule__Definition__OutputAssignment_6)
	{ after(grammarAccess.getDefinitionAccess().getOutputAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__0__Impl
	rule__Input__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getVarsAssignment_0()); }
	(rule__Input__VarsAssignment_0)
	{ after(grammarAccess.getInputAccess().getVarsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getGroup_1()); }
	(rule__Input__Group_1__0)*
	{ after(grammarAccess.getInputAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group_1__0__Impl
	rule__Input__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getInputAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getVarsAssignment_1_1()); }
	(rule__Input__VarsAssignment_1_1)
	{ after(grammarAccess.getInputAccess().getVarsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__0__Impl
	rule__Output__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getVarsAssignment_0()); }
	(rule__Output__VarsAssignment_0)
	{ after(grammarAccess.getOutputAccess().getVarsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getGroup_1()); }
	(rule__Output__Group_1__0)*
	{ after(grammarAccess.getOutputAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_1__0__Impl
	rule__Output__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getOutputAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getVarsAssignment_1_1()); }
	(rule__Output__VarsAssignment_1_1)
	{ after(grammarAccess.getOutputAccess().getVarsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Commands__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commands__Group__0__Impl
	rule__Commands__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandsAccess().getCommandsAssignment_0()); }
	(rule__Commands__CommandsAssignment_0)
	{ after(grammarAccess.getCommandsAccess().getCommandsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commands__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandsAccess().getGroup_1()); }
	(rule__Commands__Group_1__0)*
	{ after(grammarAccess.getCommandsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Commands__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commands__Group_1__0__Impl
	rule__Commands__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandsAccess().getSemicolonKeyword_1_0()); }
	';'
	{ after(grammarAccess.getCommandsAccess().getSemicolonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commands__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandsAccess().getCommandsAssignment_1_1()); }
	(rule__Commands__CommandsAssignment_1_1)
	{ after(grammarAccess.getCommandsAccess().getCommandsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileCommand__Group__0__Impl
	rule__WhileCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileCommandAccess().getWhileKeyword_0()); }
	'while'
	{ after(grammarAccess.getWhileCommandAccess().getWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileCommand__Group__1__Impl
	rule__WhileCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileCommandAccess().getExprAssignment_1()); }
	(rule__WhileCommand__ExprAssignment_1)
	{ after(grammarAccess.getWhileCommandAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileCommand__Group__2__Impl
	rule__WhileCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileCommandAccess().getDoKeyword_2()); }
	'do'
	{ after(grammarAccess.getWhileCommandAccess().getDoKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileCommand__Group__3__Impl
	rule__WhileCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileCommandAccess().getCommandsAssignment_3()); }
	(rule__WhileCommand__CommandsAssignment_3)
	{ after(grammarAccess.getWhileCommandAccess().getCommandsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileCommand__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileCommandAccess().getOdKeyword_4()); }
	'od'
	{ after(grammarAccess.getWhileCommandAccess().getOdKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group__0__Impl
	rule__IfCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfCommandAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group__1__Impl
	rule__IfCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getExprAssignment_1()); }
	(rule__IfCommand__ExprAssignment_1)
	{ after(grammarAccess.getIfCommandAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group__2__Impl
	rule__IfCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getIfCommandAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group__3__Impl
	rule__IfCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getCommandsAssignment_3()); }
	(rule__IfCommand__CommandsAssignment_3)
	{ after(grammarAccess.getIfCommandAccess().getCommandsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group__4__Impl
	rule__IfCommand__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getGroup_4()); }
	(rule__IfCommand__Group_4__0)?
	{ after(grammarAccess.getIfCommandAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getFiKeyword_5()); }
	'fi'
	{ after(grammarAccess.getIfCommandAccess().getFiKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfCommand__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group_4__0__Impl
	rule__IfCommand__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getElseKeyword_4_0()); }
	'else'
	{ after(grammarAccess.getIfCommandAccess().getElseKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getElsecommandsAssignment_4_1()); }
	(rule__IfCommand__ElsecommandsAssignment_4_1)
	{ after(grammarAccess.getIfCommandAccess().getElsecommandsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForCommand__Group__0__Impl
	rule__ForCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForCommandAccess().getForKeyword_0()); }
	'for'
	{ after(grammarAccess.getForCommandAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForCommand__Group__1__Impl
	rule__ForCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForCommandAccess().getExprAssignment_1()); }
	(rule__ForCommand__ExprAssignment_1)
	{ after(grammarAccess.getForCommandAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForCommand__Group__2__Impl
	rule__ForCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForCommandAccess().getDoKeyword_2()); }
	'do'
	{ after(grammarAccess.getForCommandAccess().getDoKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForCommand__Group__3__Impl
	rule__ForCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForCommandAccess().getCommandAssignment_3()); }
	(rule__ForCommand__CommandAssignment_3)
	{ after(grammarAccess.getForCommandAccess().getCommandAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForCommand__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForCommandAccess().getOdKeyword_4()); }
	'od'
	{ after(grammarAccess.getForCommandAccess().getOdKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AffectCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AffectCommand__Group__0__Impl
	rule__AffectCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AffectCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectCommandAccess().getVarsAssignment_0()); }
	(rule__AffectCommand__VarsAssignment_0)
	{ after(grammarAccess.getAffectCommandAccess().getVarsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AffectCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AffectCommand__Group__1__Impl
	rule__AffectCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AffectCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectCommandAccess().getColonEqualsSignKeyword_1()); }
	':='
	{ after(grammarAccess.getAffectCommandAccess().getColonEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AffectCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AffectCommand__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AffectCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectCommandAccess().getExprsAssignment_2()); }
	(rule__AffectCommand__ExprsAssignment_2)
	{ after(grammarAccess.getAffectCommandAccess().getExprsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForeachCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeachCommand__Group__0__Impl
	rule__ForeachCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachCommandAccess().getForeachKeyword_0()); }
	'foreach'
	{ after(grammarAccess.getForeachCommandAccess().getForeachKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeachCommand__Group__1__Impl
	rule__ForeachCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachCommandAccess().getVarsAssignment_1()); }
	(rule__ForeachCommand__VarsAssignment_1)
	{ after(grammarAccess.getForeachCommandAccess().getVarsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeachCommand__Group__2__Impl
	rule__ForeachCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachCommandAccess().getInKeyword_2()); }
	'in'
	{ after(grammarAccess.getForeachCommandAccess().getInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeachCommand__Group__3__Impl
	rule__ForeachCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachCommandAccess().getExprAssignment_3()); }
	(rule__ForeachCommand__ExprAssignment_3)
	{ after(grammarAccess.getForeachCommandAccess().getExprAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeachCommand__Group__4__Impl
	rule__ForeachCommand__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachCommandAccess().getDoKeyword_4()); }
	'do'
	{ after(grammarAccess.getForeachCommandAccess().getDoKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeachCommand__Group__5__Impl
	rule__ForeachCommand__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachCommandAccess().getCommandsAssignment_5()); }
	(rule__ForeachCommand__CommandsAssignment_5)
	{ after(grammarAccess.getForeachCommandAccess().getCommandsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeachCommand__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachCommandAccess().getOdKeyword_6()); }
	'od'
	{ after(grammarAccess.getForeachCommandAccess().getOdKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exprs__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprs__Group__0__Impl
	rule__Exprs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprsAccess().getExprAssignment_0()); }
	(rule__Exprs__ExprAssignment_0)
	{ after(grammarAccess.getExprsAccess().getExprAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprs__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprsAccess().getGroup_1()); }
	(rule__Exprs__Group_1__0)*
	{ after(grammarAccess.getExprsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exprs__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprs__Group_1__0__Impl
	rule__Exprs__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprsAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getExprsAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprs__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprsAccess().getExprAssignment_1_1()); }
	(rule__Exprs__ExprAssignment_1_1)
	{ after(grammarAccess.getExprsAccess().getExprAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Vars__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vars__Group__0__Impl
	rule__Vars__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsAccess().getVariAssignment_0()); }
	(rule__Vars__VariAssignment_0)
	{ after(grammarAccess.getVarsAccess().getVariAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vars__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsAccess().getGroup_1()); }
	(rule__Vars__Group_1__0)*
	{ after(grammarAccess.getVarsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Vars__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vars__Group_1__0__Impl
	rule__Vars__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getVarsAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vars__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsAccess().getVariAssignment_1_1()); }
	(rule__Vars__VariAssignment_1_1)
	{ after(grammarAccess.getVarsAccess().getVariAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expr__Group__0__Impl
	rule__Expr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAccess().getExprbaseAssignment_0()); }
	(rule__Expr__ExprbaseAssignment_0)
	{ after(grammarAccess.getExprAccess().getExprbaseAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAccess().getGroup_1()); }
	(rule__Expr__Group_1__0)?
	{ after(grammarAccess.getExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expr__Group_1__0__Impl
	rule__Expr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAccess().getOpeAssignment_1_0()); }
	(rule__Expr__OpeAssignment_1_0)
	{ after(grammarAccess.getExprAccess().getOpeAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAccess().getExprbase1Assignment_1_1()); }
	(rule__Expr__Exprbase1Assignment_1_1)
	{ after(grammarAccess.getExprAccess().getExprbase1Assignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprBase__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_4__0__Impl
	rule__ExprBase__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getLeftParenthesisKeyword_4_0()); }
	'('
	{ after(grammarAccess.getExprBaseAccess().getLeftParenthesisKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_4__1__Impl
	rule__ExprBase__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getIdentitorAssignment_4_1()); }
	(rule__ExprBase__IdentitorAssignment_4_1)
	{ after(grammarAccess.getExprBaseAccess().getIdentitorAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_4__2__Impl
	rule__ExprBase__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getLexprAssignment_4_2()); }
	(rule__ExprBase__LexprAssignment_4_2)
	{ after(grammarAccess.getExprBaseAccess().getLexprAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getRightParenthesisKeyword_4_3()); }
	')'
	{ after(grammarAccess.getExprBaseAccess().getRightParenthesisKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprBase__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_5__0__Impl
	rule__ExprBase__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getLeftParenthesisKeyword_5_0()); }
	'('
	{ after(grammarAccess.getExprBaseAccess().getLeftParenthesisKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_5__1__Impl
	rule__ExprBase__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getIdentitorAssignment_5_1()); }
	(rule__ExprBase__IdentitorAssignment_5_1)
	{ after(grammarAccess.getExprBaseAccess().getIdentitorAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_5__2__Impl
	rule__ExprBase__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getLexprAssignment_5_2()); }
	(rule__ExprBase__LexprAssignment_5_2)
	{ after(grammarAccess.getExprBaseAccess().getLexprAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getRightParenthesisKeyword_5_3()); }
	')'
	{ after(grammarAccess.getExprBaseAccess().getRightParenthesisKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprBase__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_6__0__Impl
	rule__ExprBase__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getLeftParenthesisKeyword_6_0()); }
	'('
	{ after(grammarAccess.getExprBaseAccess().getLeftParenthesisKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_6__1__Impl
	rule__ExprBase__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getIdentitorAssignment_6_1()); }
	(rule__ExprBase__IdentitorAssignment_6_1)
	{ after(grammarAccess.getExprBaseAccess().getIdentitorAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_6__2__Impl
	rule__ExprBase__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getExprAssignment_6_2()); }
	(rule__ExprBase__ExprAssignment_6_2)
	{ after(grammarAccess.getExprBaseAccess().getExprAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getRightParenthesisKeyword_6_3()); }
	')'
	{ after(grammarAccess.getExprBaseAccess().getRightParenthesisKeyword_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprBase__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_7__0__Impl
	rule__ExprBase__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getLeftParenthesisKeyword_7_0()); }
	'('
	{ after(grammarAccess.getExprBaseAccess().getLeftParenthesisKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_7__1__Impl
	rule__ExprBase__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getIdentitorAssignment_7_1()); }
	(rule__ExprBase__IdentitorAssignment_7_1)
	{ after(grammarAccess.getExprBaseAccess().getIdentitorAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_7__2__Impl
	rule__ExprBase__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getExprAssignment_7_2()); }
	(rule__ExprBase__ExprAssignment_7_2)
	{ after(grammarAccess.getExprBaseAccess().getExprAssignment_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getRightParenthesisKeyword_7_3()); }
	')'
	{ after(grammarAccess.getExprBaseAccess().getRightParenthesisKeyword_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprBase__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_8__0__Impl
	rule__ExprBase__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getLeftParenthesisKeyword_8_0()); }
	'('
	{ after(grammarAccess.getExprBaseAccess().getLeftParenthesisKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_8__1__Impl
	rule__ExprBase__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getIdentitorAssignment_8_1()); }
	(rule__ExprBase__IdentitorAssignment_8_1)
	{ after(grammarAccess.getExprBaseAccess().getIdentitorAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_8__2__Impl
	rule__ExprBase__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getExprAssignment_8_2()); }
	(rule__ExprBase__ExprAssignment_8_2)
	{ after(grammarAccess.getExprBaseAccess().getExprAssignment_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_8__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_8__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getRightParenthesisKeyword_8_3()); }
	')'
	{ after(grammarAccess.getExprBaseAccess().getRightParenthesisKeyword_8_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprBase__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_9__0__Impl
	rule__ExprBase__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getLeftParenthesisKeyword_9_0()); }
	'('
	{ after(grammarAccess.getExprBaseAccess().getLeftParenthesisKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_9__1__Impl
	rule__ExprBase__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getSymbolAssignment_9_1()); }
	(rule__ExprBase__SymbolAssignment_9_1)
	{ after(grammarAccess.getExprBaseAccess().getSymbolAssignment_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_9__2__Impl
	rule__ExprBase__Group_9__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getLexprAssignment_9_2()); }
	(rule__ExprBase__LexprAssignment_9_2)
	{ after(grammarAccess.getExprBaseAccess().getLexprAssignment_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_9__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprBase__Group_9__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__Group_9__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprBaseAccess().getRightParenthesisKeyword_9_3()); }
	')'
	{ after(grammarAccess.getExprBaseAccess().getRightParenthesisKeyword_9_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__FunctionsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getFunctionsFunctionParserRuleCall_0()); }
		ruleFunction
		{ after(grammarAccess.getProgramAccess().getFunctionsFunctionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__SymbolAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getSymbolSYMBOLTerminalRuleCall_1_0()); }
		RULE_SYMBOL
		{ after(grammarAccess.getFunctionAccess().getSymbolSYMBOLTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__DefinitionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getDefinitionDefinitionParserRuleCall_3_0()); }
		ruleDefinition
		{ after(grammarAccess.getFunctionAccess().getDefinitionDefinitionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__InputAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getInputInputParserRuleCall_1_0()); }
		ruleInput
		{ after(grammarAccess.getDefinitionAccess().getInputInputParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__CommandsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getCommandsCommandsParserRuleCall_3_0()); }
		ruleCommands
		{ after(grammarAccess.getDefinitionAccess().getCommandsCommandsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__OutputAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getOutputOutputParserRuleCall_6_0()); }
		ruleOutput
		{ after(grammarAccess.getDefinitionAccess().getOutputOutputParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__VarsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getVarsVARIABLETerminalRuleCall_0_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getInputAccess().getVarsVARIABLETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__VarsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getVarsVARIABLETerminalRuleCall_1_1_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getInputAccess().getVarsVARIABLETerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__VarsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getVarsVARIABLETerminalRuleCall_0_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getOutputAccess().getVarsVARIABLETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__VarsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getVarsVARIABLETerminalRuleCall_1_1_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getOutputAccess().getVarsVARIABLETerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__CommandsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandsAccess().getCommandsCommandParserRuleCall_0_0()); }
		ruleCommand
		{ after(grammarAccess.getCommandsAccess().getCommandsCommandParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__CommandsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandsAccess().getCommandsCommandParserRuleCall_1_1_0()); }
		ruleCommand
		{ after(grammarAccess.getCommandsAccess().getCommandsCommandParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NopCommand__ExprAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNopCommandAccess().getExprNopKeyword_0()); }
		(
			{ before(grammarAccess.getNopCommandAccess().getExprNopKeyword_0()); }
			'nop'
			{ after(grammarAccess.getNopCommandAccess().getExprNopKeyword_0()); }
		)
		{ after(grammarAccess.getNopCommandAccess().getExprNopKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileCommandAccess().getExprExprParserRuleCall_1_0()); }
		ruleExpr
		{ after(grammarAccess.getWhileCommandAccess().getExprExprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__CommandsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileCommandAccess().getCommandsCommandsParserRuleCall_3_0()); }
		ruleCommands
		{ after(grammarAccess.getWhileCommandAccess().getCommandsCommandsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfCommandAccess().getExprExprParserRuleCall_1_0()); }
		ruleExpr
		{ after(grammarAccess.getIfCommandAccess().getExprExprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__CommandsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfCommandAccess().getCommandsCommandsParserRuleCall_3_0()); }
		ruleCommands
		{ after(grammarAccess.getIfCommandAccess().getCommandsCommandsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__ElsecommandsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfCommandAccess().getElsecommandsCommandsParserRuleCall_4_1_0()); }
		ruleCommands
		{ after(grammarAccess.getIfCommandAccess().getElsecommandsCommandsParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForCommandAccess().getExprExprParserRuleCall_1_0()); }
		ruleExpr
		{ after(grammarAccess.getForCommandAccess().getExprExprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__CommandAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForCommandAccess().getCommandCommandsParserRuleCall_3_0()); }
		ruleCommands
		{ after(grammarAccess.getForCommandAccess().getCommandCommandsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AffectCommand__VarsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAffectCommandAccess().getVarsVarsParserRuleCall_0_0()); }
		ruleVars
		{ after(grammarAccess.getAffectCommandAccess().getVarsVarsParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AffectCommand__ExprsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAffectCommandAccess().getExprsExprsParserRuleCall_2_0()); }
		ruleExprs
		{ after(grammarAccess.getAffectCommandAccess().getExprsExprsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__VarsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForeachCommandAccess().getVarsVarsParserRuleCall_1_0()); }
		ruleVars
		{ after(grammarAccess.getForeachCommandAccess().getVarsVarsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__ExprAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForeachCommandAccess().getExprExprParserRuleCall_3_0()); }
		ruleExpr
		{ after(grammarAccess.getForeachCommandAccess().getExprExprParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__CommandsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForeachCommandAccess().getCommandsCommandsParserRuleCall_5_0()); }
		ruleCommands
		{ after(grammarAccess.getForeachCommandAccess().getCommandsCommandsParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__ExprAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprsAccess().getExprExprParserRuleCall_0_0()); }
		ruleExpr
		{ after(grammarAccess.getExprsAccess().getExprExprParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__ExprAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprsAccess().getExprExprParserRuleCall_1_1_0()); }
		ruleExpr
		{ after(grammarAccess.getExprsAccess().getExprExprParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__VariAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarsAccess().getVariVARIABLETerminalRuleCall_0_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getVarsAccess().getVariVARIABLETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__VariAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarsAccess().getVariVARIABLETerminalRuleCall_1_1_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getVarsAccess().getVariVARIABLETerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__ExprbaseAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAccess().getExprbaseExprBaseParserRuleCall_0_0()); }
		ruleExprBase
		{ after(grammarAccess.getExprAccess().getExprbaseExprBaseParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__OpeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAccess().getOpeAlternatives_1_0_0()); }
		(rule__Expr__OpeAlternatives_1_0_0)
		{ after(grammarAccess.getExprAccess().getOpeAlternatives_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Exprbase1Assignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAccess().getExprbase1ExprBaseParserRuleCall_1_1_0()); }
		ruleExprBase
		{ after(grammarAccess.getExprAccess().getExprbase1ExprBaseParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LExpr__ExprAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLExprAccess().getExprExprParserRuleCall_0()); }
		ruleExpr
		{ after(grammarAccess.getLExprAccess().getExprExprParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getValueNilKeyword_0_0()); }
		(
			{ before(grammarAccess.getExprBaseAccess().getValueNilKeyword_0_0()); }
			'nil'
			{ after(grammarAccess.getExprBaseAccess().getValueNilKeyword_0_0()); }
		)
		{ after(grammarAccess.getExprBaseAccess().getValueNilKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getValueVARIABLETerminalRuleCall_1_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getExprBaseAccess().getValueVARIABLETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getValueSYMBOLTerminalRuleCall_2_0()); }
		RULE_SYMBOL
		{ after(grammarAccess.getExprBaseAccess().getValueSYMBOLTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getValueNOMBRETerminalRuleCall_3_0()); }
		RULE_NOMBRE
		{ after(grammarAccess.getExprBaseAccess().getValueNOMBRETerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__IdentitorAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getIdentitorConsKeyword_4_1_0()); }
		(
			{ before(grammarAccess.getExprBaseAccess().getIdentitorConsKeyword_4_1_0()); }
			'cons'
			{ after(grammarAccess.getExprBaseAccess().getIdentitorConsKeyword_4_1_0()); }
		)
		{ after(grammarAccess.getExprBaseAccess().getIdentitorConsKeyword_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__LexprAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getLexprLExprParserRuleCall_4_2_0()); }
		ruleLExpr
		{ after(grammarAccess.getExprBaseAccess().getLexprLExprParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__IdentitorAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getIdentitorListKeyword_5_1_0()); }
		(
			{ before(grammarAccess.getExprBaseAccess().getIdentitorListKeyword_5_1_0()); }
			'list'
			{ after(grammarAccess.getExprBaseAccess().getIdentitorListKeyword_5_1_0()); }
		)
		{ after(grammarAccess.getExprBaseAccess().getIdentitorListKeyword_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__LexprAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getLexprLExprParserRuleCall_5_2_0()); }
		ruleLExpr
		{ after(grammarAccess.getExprBaseAccess().getLexprLExprParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__IdentitorAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getIdentitorHdKeyword_6_1_0()); }
		(
			{ before(grammarAccess.getExprBaseAccess().getIdentitorHdKeyword_6_1_0()); }
			'hd'
			{ after(grammarAccess.getExprBaseAccess().getIdentitorHdKeyword_6_1_0()); }
		)
		{ after(grammarAccess.getExprBaseAccess().getIdentitorHdKeyword_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__ExprAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getExprExprParserRuleCall_6_2_0()); }
		ruleExpr
		{ after(grammarAccess.getExprBaseAccess().getExprExprParserRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__IdentitorAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getIdentitorTlKeyword_7_1_0()); }
		(
			{ before(grammarAccess.getExprBaseAccess().getIdentitorTlKeyword_7_1_0()); }
			'tl'
			{ after(grammarAccess.getExprBaseAccess().getIdentitorTlKeyword_7_1_0()); }
		)
		{ after(grammarAccess.getExprBaseAccess().getIdentitorTlKeyword_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__ExprAssignment_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getExprExprParserRuleCall_7_2_0()); }
		ruleExpr
		{ after(grammarAccess.getExprBaseAccess().getExprExprParserRuleCall_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__IdentitorAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getIdentitorNotKeyword_8_1_0()); }
		(
			{ before(grammarAccess.getExprBaseAccess().getIdentitorNotKeyword_8_1_0()); }
			'not'
			{ after(grammarAccess.getExprBaseAccess().getIdentitorNotKeyword_8_1_0()); }
		)
		{ after(grammarAccess.getExprBaseAccess().getIdentitorNotKeyword_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__ExprAssignment_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getExprExprParserRuleCall_8_2_0()); }
		ruleExpr
		{ after(grammarAccess.getExprBaseAccess().getExprExprParserRuleCall_8_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__SymbolAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getSymbolSYMBOLTerminalRuleCall_9_1_0()); }
		RULE_SYMBOL
		{ after(grammarAccess.getExprBaseAccess().getSymbolSYMBOLTerminalRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBase__LexprAssignment_9_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprBaseAccess().getLexprLExprParserRuleCall_9_2_0()); }
		ruleLExpr
		{ after(grammarAccess.getExprBaseAccess().getLexprLExprParserRuleCall_9_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_SYMBOL : 'a'..'z' ('A'..'Z'|'a'..'z'|'0'..'9')* ('!'|'?')?;

RULE_VARIABLE : 'A'..'Z' ('A'..'Z'|'a'..'z'|'0'..'9')* ('!'|'?')?;

RULE_NOMBRE : '1'..'9' ('0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
