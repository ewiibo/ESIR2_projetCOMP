/*
 * generated by Xtext 2.23.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Program";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleProgram
entryRuleProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgramRule()); }
	iv_ruleProgram=ruleProgram
	{ $current=$iv_ruleProgram.current; }
	EOF;

// Rule Program
ruleProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getProgramAccess().getFunctionsFunctionParserRuleCall_0());
			}
			lv_functions_0_0=ruleFunction
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getProgramRule());
				}
				add(
					$current,
					"functions",
					lv_functions_0_0,
					"org.xtext.example.mydsl.MyDsl.Function");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='function'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionAccess().getFunctionKeyword_0());
		}
		(
			(
				lv_symbol_1_0=RULE_SYMBOL
				{
					newLeafNode(lv_symbol_1_0, grammarAccess.getFunctionAccess().getSymbolSYMBOLTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionRule());
					}
					setWithLastConsumed(
						$current,
						"symbol",
						lv_symbol_1_0,
						"org.xtext.example.mydsl.MyDsl.SYMBOL");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getFunctionAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getDefinitionDefinitionParserRuleCall_3_0());
				}
				lv_definition_3_0=ruleDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					set(
						$current,
						"definition",
						lv_definition_3_0,
						"org.xtext.example.mydsl.MyDsl.Definition");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDefinition
entryRuleDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefinitionRule()); }
	iv_ruleDefinition=ruleDefinition
	{ $current=$iv_ruleDefinition.current; }
	EOF;

// Rule Definition
ruleDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='read'
		{
			newLeafNode(otherlv_0, grammarAccess.getDefinitionAccess().getReadKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefinitionAccess().getInputInputParserRuleCall_1_0());
				}
				lv_input_1_0=ruleInput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefinitionRule());
					}
					set(
						$current,
						"input",
						lv_input_1_0,
						"org.xtext.example.mydsl.MyDsl.Input");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='%'
		{
			newLeafNode(otherlv_2, grammarAccess.getDefinitionAccess().getPercentSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefinitionAccess().getCommandsCommandsParserRuleCall_3_0());
				}
				lv_commands_3_0=ruleCommands
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefinitionRule());
					}
					set(
						$current,
						"commands",
						lv_commands_3_0,
						"org.xtext.example.mydsl.MyDsl.Commands");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='%'
		{
			newLeafNode(otherlv_4, grammarAccess.getDefinitionAccess().getPercentSignKeyword_4());
		}
		otherlv_5='write'
		{
			newLeafNode(otherlv_5, grammarAccess.getDefinitionAccess().getWriteKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefinitionAccess().getOutputOutputParserRuleCall_6_0());
				}
				lv_output_6_0=ruleOutput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefinitionRule());
					}
					set(
						$current,
						"output",
						lv_output_6_0,
						"org.xtext.example.mydsl.MyDsl.Output");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInput
entryRuleInput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputRule()); }
	iv_ruleInput=ruleInput
	{ $current=$iv_ruleInput.current; }
	EOF;

// Rule Input
ruleInput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_vars_0_0=RULE_VARIABLE
				{
					newLeafNode(lv_vars_0_0, grammarAccess.getInputAccess().getVarsVARIABLETerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInputRule());
					}
					addWithLastConsumed(
						$current,
						"vars",
						lv_vars_0_0,
						"org.xtext.example.mydsl.MyDsl.VARIABLE");
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getInputAccess().getCommaKeyword_1_0());
			}
			(
				(
					lv_vars_2_0=RULE_VARIABLE
					{
						newLeafNode(lv_vars_2_0, grammarAccess.getInputAccess().getVarsVARIABLETerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInputRule());
						}
						addWithLastConsumed(
							$current,
							"vars",
							lv_vars_2_0,
							"org.xtext.example.mydsl.MyDsl.VARIABLE");
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOutput
entryRuleOutput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutputRule()); }
	iv_ruleOutput=ruleOutput
	{ $current=$iv_ruleOutput.current; }
	EOF;

// Rule Output
ruleOutput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_vars_0_0=RULE_VARIABLE
				{
					newLeafNode(lv_vars_0_0, grammarAccess.getOutputAccess().getVarsVARIABLETerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOutputRule());
					}
					addWithLastConsumed(
						$current,
						"vars",
						lv_vars_0_0,
						"org.xtext.example.mydsl.MyDsl.VARIABLE");
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getOutputAccess().getCommaKeyword_1_0());
			}
			(
				(
					lv_vars_2_0=RULE_VARIABLE
					{
						newLeafNode(lv_vars_2_0, grammarAccess.getOutputAccess().getVarsVARIABLETerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOutputRule());
						}
						addWithLastConsumed(
							$current,
							"vars",
							lv_vars_2_0,
							"org.xtext.example.mydsl.MyDsl.VARIABLE");
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleCommands
entryRuleCommands returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandsRule()); }
	iv_ruleCommands=ruleCommands
	{ $current=$iv_ruleCommands.current; }
	EOF;

// Rule Commands
ruleCommands returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCommandsAccess().getCommandsCommandParserRuleCall_0_0());
				}
				lv_commands_0_0=ruleCommand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandsRule());
					}
					add(
						$current,
						"commands",
						lv_commands_0_0,
						"org.xtext.example.mydsl.MyDsl.Command");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getCommandsAccess().getSemicolonKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandsAccess().getCommandsCommandParserRuleCall_1_1_0());
					}
					lv_commands_2_0=ruleCommand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandsRule());
						}
						add(
							$current,
							"commands",
							lv_commands_2_0,
							"org.xtext.example.mydsl.MyDsl.Command");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleCommand
entryRuleCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandRule()); }
	iv_ruleCommand=ruleCommand
	{ $current=$iv_ruleCommand.current; }
	EOF;

// Rule Command
ruleCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCommandAccess().getWhileCommandParserRuleCall_0());
		}
		this_WhileCommand_0=ruleWhileCommand
		{
			$current = $this_WhileCommand_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getIfCommandParserRuleCall_1());
		}
		this_IfCommand_1=ruleIfCommand
		{
			$current = $this_IfCommand_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getForCommandParserRuleCall_2());
		}
		this_ForCommand_2=ruleForCommand
		{
			$current = $this_ForCommand_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getAffectCommandParserRuleCall_3());
		}
		this_AffectCommand_3=ruleAffectCommand
		{
			$current = $this_AffectCommand_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getForeachCommandParserRuleCall_4());
		}
		this_ForeachCommand_4=ruleForeachCommand
		{
			$current = $this_ForeachCommand_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getCommandAccess().getCommandAction_5_0(),
						$current);
				}
			)
			otherlv_6='nop'
			{
				newLeafNode(otherlv_6, grammarAccess.getCommandAccess().getNopKeyword_5_1());
			}
		)
	)
;

// Entry rule entryRuleWhileCommand
entryRuleWhileCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhileCommandRule()); }
	iv_ruleWhileCommand=ruleWhileCommand
	{ $current=$iv_ruleWhileCommand.current; }
	EOF;

// Rule WhileCommand
ruleWhileCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='while'
		{
			newLeafNode(otherlv_0, grammarAccess.getWhileCommandAccess().getWhileKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileCommandAccess().getExprExprParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileCommandRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"org.xtext.example.mydsl.MyDsl.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='do'
		{
			newLeafNode(otherlv_2, grammarAccess.getWhileCommandAccess().getDoKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileCommandAccess().getCommandsCommandsParserRuleCall_3_0());
				}
				lv_commands_3_0=ruleCommands
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileCommandRule());
					}
					set(
						$current,
						"commands",
						lv_commands_3_0,
						"org.xtext.example.mydsl.MyDsl.Commands");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='od'
		{
			newLeafNode(otherlv_4, grammarAccess.getWhileCommandAccess().getOdKeyword_4());
		}
	)
;

// Entry rule entryRuleIfCommand
entryRuleIfCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfCommandRule()); }
	iv_ruleIfCommand=ruleIfCommand
	{ $current=$iv_ruleIfCommand.current; }
	EOF;

// Rule IfCommand
ruleIfCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfCommandAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfCommandAccess().getExprExprParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfCommandRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"org.xtext.example.mydsl.MyDsl.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='then'
		{
			newLeafNode(otherlv_2, grammarAccess.getIfCommandAccess().getThenKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfCommandAccess().getCommandsCommandsParserRuleCall_3_0());
				}
				lv_commands_3_0=ruleCommands
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfCommandRule());
					}
					set(
						$current,
						"commands",
						lv_commands_3_0,
						"org.xtext.example.mydsl.MyDsl.Commands");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='else'
			{
				newLeafNode(otherlv_4, grammarAccess.getIfCommandAccess().getElseKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfCommandAccess().getElsecommandsCommandsParserRuleCall_4_1_0());
					}
					lv_elsecommands_5_0=ruleCommands
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfCommandRule());
						}
						set(
							$current,
							"elsecommands",
							lv_elsecommands_5_0,
							"org.xtext.example.mydsl.MyDsl.Commands");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='fi'
		{
			newLeafNode(otherlv_6, grammarAccess.getIfCommandAccess().getFiKeyword_5());
		}
	)
;

// Entry rule entryRuleForCommand
entryRuleForCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForCommandRule()); }
	iv_ruleForCommand=ruleForCommand
	{ $current=$iv_ruleForCommand.current; }
	EOF;

// Rule ForCommand
ruleForCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='for'
		{
			newLeafNode(otherlv_0, grammarAccess.getForCommandAccess().getForKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForCommandAccess().getExprExprParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForCommandRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"org.xtext.example.mydsl.MyDsl.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='do'
		{
			newLeafNode(otherlv_2, grammarAccess.getForCommandAccess().getDoKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForCommandAccess().getCommandCommandsParserRuleCall_3_0());
				}
				lv_command_3_0=ruleCommands
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForCommandRule());
					}
					set(
						$current,
						"command",
						lv_command_3_0,
						"org.xtext.example.mydsl.MyDsl.Commands");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='od'
		{
			newLeafNode(otherlv_4, grammarAccess.getForCommandAccess().getOdKeyword_4());
		}
	)
;

// Entry rule entryRuleAffectCommand
entryRuleAffectCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAffectCommandRule()); }
	iv_ruleAffectCommand=ruleAffectCommand
	{ $current=$iv_ruleAffectCommand.current; }
	EOF;

// Rule AffectCommand
ruleAffectCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAffectCommandAccess().getVarsVarsParserRuleCall_0_0());
				}
				lv_vars_0_0=ruleVars
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAffectCommandRule());
					}
					set(
						$current,
						"vars",
						lv_vars_0_0,
						"org.xtext.example.mydsl.MyDsl.Vars");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':='
		{
			newLeafNode(otherlv_1, grammarAccess.getAffectCommandAccess().getColonEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAffectCommandAccess().getExprsExprsParserRuleCall_2_0());
				}
				lv_exprs_2_0=ruleExprs
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAffectCommandRule());
					}
					set(
						$current,
						"exprs",
						lv_exprs_2_0,
						"org.xtext.example.mydsl.MyDsl.Exprs");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleForeachCommand
entryRuleForeachCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForeachCommandRule()); }
	iv_ruleForeachCommand=ruleForeachCommand
	{ $current=$iv_ruleForeachCommand.current; }
	EOF;

// Rule ForeachCommand
ruleForeachCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='foreach'
		{
			newLeafNode(otherlv_0, grammarAccess.getForeachCommandAccess().getForeachKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForeachCommandAccess().getVarsVarsParserRuleCall_1_0());
				}
				lv_vars_1_0=ruleVars
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForeachCommandRule());
					}
					set(
						$current,
						"vars",
						lv_vars_1_0,
						"org.xtext.example.mydsl.MyDsl.Vars");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='in'
		{
			newLeafNode(otherlv_2, grammarAccess.getForeachCommandAccess().getInKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForeachCommandAccess().getExprExprParserRuleCall_3_0());
				}
				lv_expr_3_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForeachCommandRule());
					}
					set(
						$current,
						"expr",
						lv_expr_3_0,
						"org.xtext.example.mydsl.MyDsl.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='do'
		{
			newLeafNode(otherlv_4, grammarAccess.getForeachCommandAccess().getDoKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForeachCommandAccess().getCommandsCommandsParserRuleCall_5_0());
				}
				lv_commands_5_0=ruleCommands
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForeachCommandRule());
					}
					set(
						$current,
						"commands",
						lv_commands_5_0,
						"org.xtext.example.mydsl.MyDsl.Commands");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='od'
		{
			newLeafNode(otherlv_6, grammarAccess.getForeachCommandAccess().getOdKeyword_6());
		}
	)
;

// Entry rule entryRuleExprs
entryRuleExprs returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprsRule()); }
	iv_ruleExprs=ruleExprs
	{ $current=$iv_ruleExprs.current; }
	EOF;

// Rule Exprs
ruleExprs returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExprsAccess().getExprExprParserRuleCall_0_0());
				}
				lv_expr_0_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprsRule());
					}
					add(
						$current,
						"expr",
						lv_expr_0_0,
						"org.xtext.example.mydsl.MyDsl.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getExprsAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExprsAccess().getExprExprParserRuleCall_1_1_0());
					}
					lv_expr_2_0=ruleExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExprsRule());
						}
						add(
							$current,
							"expr",
							lv_expr_2_0,
							"org.xtext.example.mydsl.MyDsl.Expr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleVars
entryRuleVars returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarsRule()); }
	iv_ruleVars=ruleVars
	{ $current=$iv_ruleVars.current; }
	EOF;

// Rule Vars
ruleVars returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_var_0_0=RULE_VARIABLE
				{
					newLeafNode(lv_var_0_0, grammarAccess.getVarsAccess().getVarVARIABLETerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVarsRule());
					}
					addWithLastConsumed(
						$current,
						"var",
						lv_var_0_0,
						"org.xtext.example.mydsl.MyDsl.VARIABLE");
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getVarsAccess().getCommaKeyword_1_0());
			}
			(
				(
					lv_var_2_0=RULE_VARIABLE
					{
						newLeafNode(lv_var_2_0, grammarAccess.getVarsAccess().getVarVARIABLETerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVarsRule());
						}
						addWithLastConsumed(
							$current,
							"var",
							lv_var_2_0,
							"org.xtext.example.mydsl.MyDsl.VARIABLE");
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExpr
entryRuleExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprRule()); }
	iv_ruleExpr=ruleExpr
	{ $current=$iv_ruleExpr.current; }
	EOF;

// Rule Expr
ruleExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExprAccess().getExprbaseExprBaseParserRuleCall_0_0());
				}
				lv_exprbase_0_0=ruleExprBase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprRule());
					}
					add(
						$current,
						"exprbase",
						lv_exprbase_0_0,
						"org.xtext.example.mydsl.MyDsl.ExprBase");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='=?'
			{
				newLeafNode(otherlv_1, grammarAccess.getExprAccess().getEqualsSignQuestionMarkKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExprAccess().getExprbaseExprBaseParserRuleCall_1_1_0());
					}
					lv_exprbase_2_0=ruleExprBase
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExprRule());
						}
						add(
							$current,
							"exprbase",
							lv_exprbase_2_0,
							"org.xtext.example.mydsl.MyDsl.ExprBase");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleLExpr
entryRuleLExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLExprRule()); }
	iv_ruleLExpr=ruleLExpr
	{ $current=$iv_ruleLExpr.current; }
	EOF;

// Rule LExpr
ruleLExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getLExprAccess().getExprExprParserRuleCall_0());
			}
			lv_expr_0_0=ruleExpr
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getLExprRule());
				}
				add(
					$current,
					"expr",
					lv_expr_0_0,
					"org.xtext.example.mydsl.MyDsl.Expr");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleExprBase
entryRuleExprBase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprBaseRule()); }
	iv_ruleExprBase=ruleExprBase
	{ $current=$iv_ruleExprBase.current; }
	EOF;

// Rule ExprBase
ruleExprBase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getExprBaseAccess().getExprBaseAction_0_0(),
						$current);
				}
			)
			otherlv_1='nil'
			{
				newLeafNode(otherlv_1, grammarAccess.getExprBaseAccess().getNilKeyword_0_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getExprBaseAccess().getExprBaseAction_1_0(),
						$current);
				}
			)
			this_VARIABLE_3=RULE_VARIABLE
			{
				newLeafNode(this_VARIABLE_3, grammarAccess.getExprBaseAccess().getVARIABLETerminalRuleCall_1_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getExprBaseAccess().getExprBaseAction_2_0(),
						$current);
				}
			)
			this_SYMBOL_5=RULE_SYMBOL
			{
				newLeafNode(this_SYMBOL_5, grammarAccess.getExprBaseAccess().getSYMBOLTerminalRuleCall_2_1());
			}
		)
		    |
		(
			otherlv_6='('
			{
				newLeafNode(otherlv_6, grammarAccess.getExprBaseAccess().getLeftParenthesisKeyword_3_0());
			}
			otherlv_7='cons'
			{
				newLeafNode(otherlv_7, grammarAccess.getExprBaseAccess().getConsKeyword_3_1());
			}
			{
				newCompositeNode(grammarAccess.getExprBaseAccess().getLExprParserRuleCall_3_2());
			}
			this_LExpr_8=ruleLExpr
			{
				$current = $this_LExpr_8.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getExprBaseAccess().getRightParenthesisKeyword_3_3());
			}
		)
		    |
		(
			otherlv_10='('
			{
				newLeafNode(otherlv_10, grammarAccess.getExprBaseAccess().getLeftParenthesisKeyword_4_0());
			}
			otherlv_11='list'
			{
				newLeafNode(otherlv_11, grammarAccess.getExprBaseAccess().getListKeyword_4_1());
			}
			{
				newCompositeNode(grammarAccess.getExprBaseAccess().getLExprParserRuleCall_4_2());
			}
			this_LExpr_12=ruleLExpr
			{
				$current = $this_LExpr_12.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_13=')'
			{
				newLeafNode(otherlv_13, grammarAccess.getExprBaseAccess().getRightParenthesisKeyword_4_3());
			}
		)
		    |
		(
			otherlv_14='('
			{
				newLeafNode(otherlv_14, grammarAccess.getExprBaseAccess().getLeftParenthesisKeyword_5_0());
			}
			otherlv_15='hd'
			{
				newLeafNode(otherlv_15, grammarAccess.getExprBaseAccess().getHdKeyword_5_1());
			}
			{
				newCompositeNode(grammarAccess.getExprBaseAccess().getExprParserRuleCall_5_2());
			}
			this_Expr_16=ruleExpr
			{
				$current = $this_Expr_16.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_17=')'
			{
				newLeafNode(otherlv_17, grammarAccess.getExprBaseAccess().getRightParenthesisKeyword_5_3());
			}
		)
		    |
		(
			otherlv_18='('
			{
				newLeafNode(otherlv_18, grammarAccess.getExprBaseAccess().getLeftParenthesisKeyword_6_0());
			}
			otherlv_19='tl'
			{
				newLeafNode(otherlv_19, grammarAccess.getExprBaseAccess().getTlKeyword_6_1());
			}
			{
				newCompositeNode(grammarAccess.getExprBaseAccess().getExprParserRuleCall_6_2());
			}
			this_Expr_20=ruleExpr
			{
				$current = $this_Expr_20.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_21=')'
			{
				newLeafNode(otherlv_21, grammarAccess.getExprBaseAccess().getRightParenthesisKeyword_6_3());
			}
		)
		    |
		(
			otherlv_22='('
			{
				newLeafNode(otherlv_22, grammarAccess.getExprBaseAccess().getLeftParenthesisKeyword_7_0());
			}
			this_SYMBOL_23=RULE_SYMBOL
			{
				newLeafNode(this_SYMBOL_23, grammarAccess.getExprBaseAccess().getSYMBOLTerminalRuleCall_7_1());
			}
			{
				newCompositeNode(grammarAccess.getExprBaseAccess().getLExprParserRuleCall_7_2());
			}
			this_LExpr_24=ruleLExpr
			{
				$current = $this_LExpr_24.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_25=')'
			{
				newLeafNode(otherlv_25, grammarAccess.getExprBaseAccess().getRightParenthesisKeyword_7_3());
			}
		)
	)
;

RULE_SYMBOL : 'a'..'z' ('A'..'Z'|'a'..'z'|'0'..'9')* ('!'|'?')?;

RULE_VARIABLE : 'A'..'Z' ('A'..'Z'|'a'..'z'|'0'..'9')* ('!'|'?')?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
