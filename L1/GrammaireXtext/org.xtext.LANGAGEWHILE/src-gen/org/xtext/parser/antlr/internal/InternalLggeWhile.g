/*
 * generated by Xtext 2.23.0
 */
grammar InternalLggeWhile;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.services.LggeWhileGrammarAccess;

}

@parser::members {

 	private LggeWhileGrammarAccess grammarAccess;

    public InternalLggeWhileParser(TokenStream input, LggeWhileGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Program";
   	}

   	@Override
   	protected LggeWhileGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleProgram
entryRuleProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgramRule()); }
	iv_ruleProgram=ruleProgram
	{ $current=$iv_ruleProgram.current; }
	EOF;

// Rule Program
ruleProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getProgramAccess().getFunctionsFunctionParserRuleCall_0());
			}
			lv_functions_0_0=ruleFunction
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getProgramRule());
				}
				add(
					$current,
					"functions",
					lv_functions_0_0,
					"org.xtext.LggeWhile.Function");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='function'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionAccess().getFunctionKeyword_0());
		}
		(
			(
				lv_symbol_1_0=RULE_SYMBOL
				{
					newLeafNode(lv_symbol_1_0, grammarAccess.getFunctionAccess().getSymbolSYMBOLTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionRule());
					}
					setWithLastConsumed(
						$current,
						"symbol",
						lv_symbol_1_0,
						"org.xtext.LggeWhile.SYMBOL");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getFunctionAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getDefinitionDefinitionParserRuleCall_3_0());
				}
				lv_definition_3_0=ruleDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					set(
						$current,
						"definition",
						lv_definition_3_0,
						"org.xtext.LggeWhile.Definition");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDefinition
entryRuleDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefinitionRule()); }
	iv_ruleDefinition=ruleDefinition
	{ $current=$iv_ruleDefinition.current; }
	EOF;

// Rule Definition
ruleDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='read'
		{
			newLeafNode(otherlv_0, grammarAccess.getDefinitionAccess().getReadKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefinitionAccess().getInputInputParserRuleCall_1_0());
				}
				lv_input_1_0=ruleInput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefinitionRule());
					}
					set(
						$current,
						"input",
						lv_input_1_0,
						"org.xtext.LggeWhile.Input");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='%'
		{
			newLeafNode(otherlv_2, grammarAccess.getDefinitionAccess().getPercentSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefinitionAccess().getCommandsCommandsParserRuleCall_3_0());
				}
				lv_commands_3_0=ruleCommands
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefinitionRule());
					}
					set(
						$current,
						"commands",
						lv_commands_3_0,
						"org.xtext.LggeWhile.Commands");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='%'
		{
			newLeafNode(otherlv_4, grammarAccess.getDefinitionAccess().getPercentSignKeyword_4());
		}
		otherlv_5='write'
		{
			newLeafNode(otherlv_5, grammarAccess.getDefinitionAccess().getWriteKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefinitionAccess().getOutputOutputParserRuleCall_6_0());
				}
				lv_output_6_0=ruleOutput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefinitionRule());
					}
					set(
						$current,
						"output",
						lv_output_6_0,
						"org.xtext.LggeWhile.Output");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInput
entryRuleInput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputRule()); }
	iv_ruleInput=ruleInput
	{ $current=$iv_ruleInput.current; }
	EOF;

// Rule Input
ruleInput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_vars_0_0=RULE_VARIABLE
				{
					newLeafNode(lv_vars_0_0, grammarAccess.getInputAccess().getVarsVARIABLETerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInputRule());
					}
					addWithLastConsumed(
						$current,
						"vars",
						lv_vars_0_0,
						"org.xtext.LggeWhile.VARIABLE");
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getInputAccess().getCommaKeyword_1_0());
			}
			(
				(
					lv_vars_2_0=RULE_VARIABLE
					{
						newLeafNode(lv_vars_2_0, grammarAccess.getInputAccess().getVarsVARIABLETerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInputRule());
						}
						addWithLastConsumed(
							$current,
							"vars",
							lv_vars_2_0,
							"org.xtext.LggeWhile.VARIABLE");
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOutput
entryRuleOutput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutputRule()); }
	iv_ruleOutput=ruleOutput
	{ $current=$iv_ruleOutput.current; }
	EOF;

// Rule Output
ruleOutput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_vars_0_0=RULE_VARIABLE
				{
					newLeafNode(lv_vars_0_0, grammarAccess.getOutputAccess().getVarsVARIABLETerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOutputRule());
					}
					addWithLastConsumed(
						$current,
						"vars",
						lv_vars_0_0,
						"org.xtext.LggeWhile.VARIABLE");
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getOutputAccess().getCommaKeyword_1_0());
			}
			(
				(
					lv_vars_2_0=RULE_VARIABLE
					{
						newLeafNode(lv_vars_2_0, grammarAccess.getOutputAccess().getVarsVARIABLETerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOutputRule());
						}
						addWithLastConsumed(
							$current,
							"vars",
							lv_vars_2_0,
							"org.xtext.LggeWhile.VARIABLE");
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleCommands
entryRuleCommands returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandsRule()); }
	iv_ruleCommands=ruleCommands
	{ $current=$iv_ruleCommands.current; }
	EOF;

// Rule Commands
ruleCommands returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCommandsAccess().getCommandsCommandParserRuleCall_0_0());
				}
				lv_commands_0_0=ruleCommand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandsRule());
					}
					add(
						$current,
						"commands",
						lv_commands_0_0,
						"org.xtext.LggeWhile.Command");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getCommandsAccess().getSemicolonKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandsAccess().getCommandsCommandParserRuleCall_1_1_0());
					}
					lv_commands_2_0=ruleCommand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandsRule());
						}
						add(
							$current,
							"commands",
							lv_commands_2_0,
							"org.xtext.LggeWhile.Command");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleCommand
entryRuleCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandRule()); }
	iv_ruleCommand=ruleCommand
	{ $current=$iv_ruleCommand.current; }
	EOF;

// Rule Command
ruleCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCommandAccess().getWhileCommandParserRuleCall_0());
		}
		this_WhileCommand_0=ruleWhileCommand
		{
			$current = $this_WhileCommand_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getIfCommandParserRuleCall_1());
		}
		this_IfCommand_1=ruleIfCommand
		{
			$current = $this_IfCommand_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getForCommandParserRuleCall_2());
		}
		this_ForCommand_2=ruleForCommand
		{
			$current = $this_ForCommand_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getAffectCommandParserRuleCall_3());
		}
		this_AffectCommand_3=ruleAffectCommand
		{
			$current = $this_AffectCommand_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getForeachCommandParserRuleCall_4());
		}
		this_ForeachCommand_4=ruleForeachCommand
		{
			$current = $this_ForeachCommand_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getNopCommandParserRuleCall_5());
		}
		this_NopCommand_5=ruleNopCommand
		{
			$current = $this_NopCommand_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNopCommand
entryRuleNopCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNopCommandRule()); }
	iv_ruleNopCommand=ruleNopCommand
	{ $current=$iv_ruleNopCommand.current; }
	EOF;

// Rule NopCommand
ruleNopCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_expr_0_0='nop'
			{
				newLeafNode(lv_expr_0_0, grammarAccess.getNopCommandAccess().getExprNopKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNopCommandRule());
				}
				setWithLastConsumed($current, "expr", lv_expr_0_0, "nop");
			}
		)
	)
;

// Entry rule entryRuleWhileCommand
entryRuleWhileCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhileCommandRule()); }
	iv_ruleWhileCommand=ruleWhileCommand
	{ $current=$iv_ruleWhileCommand.current; }
	EOF;

// Rule WhileCommand
ruleWhileCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='while'
		{
			newLeafNode(otherlv_0, grammarAccess.getWhileCommandAccess().getWhileKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileCommandAccess().getExprExprParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileCommandRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"org.xtext.LggeWhile.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='do'
		{
			newLeafNode(otherlv_2, grammarAccess.getWhileCommandAccess().getDoKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileCommandAccess().getCommandsCommandsParserRuleCall_3_0());
				}
				lv_commands_3_0=ruleCommands
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileCommandRule());
					}
					set(
						$current,
						"commands",
						lv_commands_3_0,
						"org.xtext.LggeWhile.Commands");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='od'
		{
			newLeafNode(otherlv_4, grammarAccess.getWhileCommandAccess().getOdKeyword_4());
		}
	)
;

// Entry rule entryRuleIfCommand
entryRuleIfCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfCommandRule()); }
	iv_ruleIfCommand=ruleIfCommand
	{ $current=$iv_ruleIfCommand.current; }
	EOF;

// Rule IfCommand
ruleIfCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfCommandAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfCommandAccess().getExprExprParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfCommandRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"org.xtext.LggeWhile.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='then'
		{
			newLeafNode(otherlv_2, grammarAccess.getIfCommandAccess().getThenKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfCommandAccess().getCommandsCommandsParserRuleCall_3_0());
				}
				lv_commands_3_0=ruleCommands
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfCommandRule());
					}
					set(
						$current,
						"commands",
						lv_commands_3_0,
						"org.xtext.LggeWhile.Commands");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='else'
			{
				newLeafNode(otherlv_4, grammarAccess.getIfCommandAccess().getElseKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfCommandAccess().getElsecommandsCommandsParserRuleCall_4_1_0());
					}
					lv_elsecommands_5_0=ruleCommands
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfCommandRule());
						}
						set(
							$current,
							"elsecommands",
							lv_elsecommands_5_0,
							"org.xtext.LggeWhile.Commands");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='fi'
		{
			newLeafNode(otherlv_6, grammarAccess.getIfCommandAccess().getFiKeyword_5());
		}
	)
;

// Entry rule entryRuleForCommand
entryRuleForCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForCommandRule()); }
	iv_ruleForCommand=ruleForCommand
	{ $current=$iv_ruleForCommand.current; }
	EOF;

// Rule ForCommand
ruleForCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='for'
		{
			newLeafNode(otherlv_0, grammarAccess.getForCommandAccess().getForKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForCommandAccess().getExprExprParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForCommandRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"org.xtext.LggeWhile.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='do'
		{
			newLeafNode(otherlv_2, grammarAccess.getForCommandAccess().getDoKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForCommandAccess().getCommandCommandsParserRuleCall_3_0());
				}
				lv_command_3_0=ruleCommands
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForCommandRule());
					}
					set(
						$current,
						"command",
						lv_command_3_0,
						"org.xtext.LggeWhile.Commands");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='od'
		{
			newLeafNode(otherlv_4, grammarAccess.getForCommandAccess().getOdKeyword_4());
		}
	)
;

// Entry rule entryRuleAffectCommand
entryRuleAffectCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAffectCommandRule()); }
	iv_ruleAffectCommand=ruleAffectCommand
	{ $current=$iv_ruleAffectCommand.current; }
	EOF;

// Rule AffectCommand
ruleAffectCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAffectCommandAccess().getVarsVarsParserRuleCall_0_0());
				}
				lv_vars_0_0=ruleVars
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAffectCommandRule());
					}
					set(
						$current,
						"vars",
						lv_vars_0_0,
						"org.xtext.LggeWhile.Vars");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':='
		{
			newLeafNode(otherlv_1, grammarAccess.getAffectCommandAccess().getColonEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAffectCommandAccess().getExprsExprsParserRuleCall_2_0());
				}
				lv_exprs_2_0=ruleExprs
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAffectCommandRule());
					}
					set(
						$current,
						"exprs",
						lv_exprs_2_0,
						"org.xtext.LggeWhile.Exprs");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleForeachCommand
entryRuleForeachCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForeachCommandRule()); }
	iv_ruleForeachCommand=ruleForeachCommand
	{ $current=$iv_ruleForeachCommand.current; }
	EOF;

// Rule ForeachCommand
ruleForeachCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='foreach'
		{
			newLeafNode(otherlv_0, grammarAccess.getForeachCommandAccess().getForeachKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForeachCommandAccess().getVarsVarsParserRuleCall_1_0());
				}
				lv_vars_1_0=ruleVars
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForeachCommandRule());
					}
					set(
						$current,
						"vars",
						lv_vars_1_0,
						"org.xtext.LggeWhile.Vars");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='in'
		{
			newLeafNode(otherlv_2, grammarAccess.getForeachCommandAccess().getInKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForeachCommandAccess().getExprExprParserRuleCall_3_0());
				}
				lv_expr_3_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForeachCommandRule());
					}
					set(
						$current,
						"expr",
						lv_expr_3_0,
						"org.xtext.LggeWhile.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='do'
		{
			newLeafNode(otherlv_4, grammarAccess.getForeachCommandAccess().getDoKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForeachCommandAccess().getCommandsCommandsParserRuleCall_5_0());
				}
				lv_commands_5_0=ruleCommands
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForeachCommandRule());
					}
					set(
						$current,
						"commands",
						lv_commands_5_0,
						"org.xtext.LggeWhile.Commands");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='od'
		{
			newLeafNode(otherlv_6, grammarAccess.getForeachCommandAccess().getOdKeyword_6());
		}
	)
;

// Entry rule entryRuleExprs
entryRuleExprs returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprsRule()); }
	iv_ruleExprs=ruleExprs
	{ $current=$iv_ruleExprs.current; }
	EOF;

// Rule Exprs
ruleExprs returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExprsAccess().getExprExprParserRuleCall_0_0());
				}
				lv_expr_0_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprsRule());
					}
					add(
						$current,
						"expr",
						lv_expr_0_0,
						"org.xtext.LggeWhile.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getExprsAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExprsAccess().getExprExprParserRuleCall_1_1_0());
					}
					lv_expr_2_0=ruleExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExprsRule());
						}
						add(
							$current,
							"expr",
							lv_expr_2_0,
							"org.xtext.LggeWhile.Expr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleVars
entryRuleVars returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarsRule()); }
	iv_ruleVars=ruleVars
	{ $current=$iv_ruleVars.current; }
	EOF;

// Rule Vars
ruleVars returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_vari_0_0=RULE_VARIABLE
				{
					newLeafNode(lv_vari_0_0, grammarAccess.getVarsAccess().getVariVARIABLETerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVarsRule());
					}
					addWithLastConsumed(
						$current,
						"vari",
						lv_vari_0_0,
						"org.xtext.LggeWhile.VARIABLE");
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getVarsAccess().getCommaKeyword_1_0());
			}
			(
				(
					lv_vari_2_0=RULE_VARIABLE
					{
						newLeafNode(lv_vari_2_0, grammarAccess.getVarsAccess().getVariVARIABLETerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVarsRule());
						}
						addWithLastConsumed(
							$current,
							"vari",
							lv_vari_2_0,
							"org.xtext.LggeWhile.VARIABLE");
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExpr
entryRuleExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprRule()); }
	iv_ruleExpr=ruleExpr
	{ $current=$iv_ruleExpr.current; }
	EOF;

// Rule Expr
ruleExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExprAccess().getExprbaseExprBaseParserRuleCall_0_0());
				}
				lv_exprbase_0_0=ruleExprBase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprRule());
					}
					set(
						$current,
						"exprbase",
						lv_exprbase_0_0,
						"org.xtext.LggeWhile.ExprBase");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='=?'
			{
				newLeafNode(otherlv_1, grammarAccess.getExprAccess().getEqualsSignQuestionMarkKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExprAccess().getExprbase1ExprBaseParserRuleCall_1_1_0());
					}
					lv_exprbase1_2_0=ruleExprBase
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExprRule());
						}
						set(
							$current,
							"exprbase1",
							lv_exprbase1_2_0,
							"org.xtext.LggeWhile.ExprBase");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleLExpr
entryRuleLExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLExprRule()); }
	iv_ruleLExpr=ruleLExpr
	{ $current=$iv_ruleLExpr.current; }
	EOF;

// Rule LExpr
ruleLExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getLExprAccess().getExprExprParserRuleCall_0());
			}
			lv_expr_0_0=ruleExpr
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getLExprRule());
				}
				add(
					$current,
					"expr",
					lv_expr_0_0,
					"org.xtext.LggeWhile.Expr");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleExprBase
entryRuleExprBase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprBaseRule()); }
	iv_ruleExprBase=ruleExprBase
	{ $current=$iv_ruleExprBase.current; }
	EOF;

// Rule ExprBase
ruleExprBase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0='nil'
				{
					newLeafNode(lv_value_0_0, grammarAccess.getExprBaseAccess().getValueNilKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExprBaseRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_0, "nil");
				}
			)
		)
		    |
		(
			(
				lv_value_1_0=RULE_VARIABLE
				{
					newLeafNode(lv_value_1_0, grammarAccess.getExprBaseAccess().getValueVARIABLETerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExprBaseRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.xtext.LggeWhile.VARIABLE");
				}
			)
		)
		    |
		(
			(
				lv_value_2_0=RULE_SYMBOL
				{
					newLeafNode(lv_value_2_0, grammarAccess.getExprBaseAccess().getValueSYMBOLTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExprBaseRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.LggeWhile.SYMBOL");
				}
			)
		)
		    |
		(
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getExprBaseAccess().getLeftParenthesisKeyword_3_0());
			}
			(
				(
					lv_identitor_4_0='cons'
					{
						newLeafNode(lv_identitor_4_0, grammarAccess.getExprBaseAccess().getIdentitorConsKeyword_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExprBaseRule());
						}
						setWithLastConsumed($current, "identitor", lv_identitor_4_0, "cons");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExprBaseAccess().getLexprLExprParserRuleCall_3_2_0());
					}
					lv_lexpr_5_0=ruleLExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExprBaseRule());
						}
						set(
							$current,
							"lexpr",
							lv_lexpr_5_0,
							"org.xtext.LggeWhile.LExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getExprBaseAccess().getRightParenthesisKeyword_3_3());
			}
		)
		    |
		(
			otherlv_7='('
			{
				newLeafNode(otherlv_7, grammarAccess.getExprBaseAccess().getLeftParenthesisKeyword_4_0());
			}
			(
				(
					lv_identitor_8_0='list'
					{
						newLeafNode(lv_identitor_8_0, grammarAccess.getExprBaseAccess().getIdentitorListKeyword_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExprBaseRule());
						}
						setWithLastConsumed($current, "identitor", lv_identitor_8_0, "list");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExprBaseAccess().getLexprLExprParserRuleCall_4_2_0());
					}
					lv_lexpr_9_0=ruleLExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExprBaseRule());
						}
						set(
							$current,
							"lexpr",
							lv_lexpr_9_0,
							"org.xtext.LggeWhile.LExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_10=')'
			{
				newLeafNode(otherlv_10, grammarAccess.getExprBaseAccess().getRightParenthesisKeyword_4_3());
			}
		)
		    |
		(
			otherlv_11='('
			{
				newLeafNode(otherlv_11, grammarAccess.getExprBaseAccess().getLeftParenthesisKeyword_5_0());
			}
			(
				(
					lv_identitor1_12_0='hd'
					{
						newLeafNode(lv_identitor1_12_0, grammarAccess.getExprBaseAccess().getIdentitor1HdKeyword_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExprBaseRule());
						}
						setWithLastConsumed($current, "identitor1", lv_identitor1_12_0, "hd");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExprBaseAccess().getExprExprParserRuleCall_5_2_0());
					}
					lv_expr_13_0=ruleExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExprBaseRule());
						}
						set(
							$current,
							"expr",
							lv_expr_13_0,
							"org.xtext.LggeWhile.Expr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_14=')'
			{
				newLeafNode(otherlv_14, grammarAccess.getExprBaseAccess().getRightParenthesisKeyword_5_3());
			}
		)
		    |
		(
			otherlv_15='('
			{
				newLeafNode(otherlv_15, grammarAccess.getExprBaseAccess().getLeftParenthesisKeyword_6_0());
			}
			(
				(
					lv_identitor1_16_0='tl'
					{
						newLeafNode(lv_identitor1_16_0, grammarAccess.getExprBaseAccess().getIdentitor1TlKeyword_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExprBaseRule());
						}
						setWithLastConsumed($current, "identitor1", lv_identitor1_16_0, "tl");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExprBaseAccess().getExprExprParserRuleCall_6_2_0());
					}
					lv_expr_17_0=ruleExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExprBaseRule());
						}
						set(
							$current,
							"expr",
							lv_expr_17_0,
							"org.xtext.LggeWhile.Expr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_18=')'
			{
				newLeafNode(otherlv_18, grammarAccess.getExprBaseAccess().getRightParenthesisKeyword_6_3());
			}
		)
		    |
		(
			otherlv_19='('
			{
				newLeafNode(otherlv_19, grammarAccess.getExprBaseAccess().getLeftParenthesisKeyword_7_0());
			}
			(
				(
					lv_symbol_20_0=RULE_SYMBOL
					{
						newLeafNode(lv_symbol_20_0, grammarAccess.getExprBaseAccess().getSymbolSYMBOLTerminalRuleCall_7_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExprBaseRule());
						}
						setWithLastConsumed(
							$current,
							"symbol",
							lv_symbol_20_0,
							"org.xtext.LggeWhile.SYMBOL");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExprBaseAccess().getLexprLExprParserRuleCall_7_2_0());
					}
					lv_lexpr_21_0=ruleLExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExprBaseRule());
						}
						set(
							$current,
							"lexpr",
							lv_lexpr_21_0,
							"org.xtext.LggeWhile.LExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_22=')'
			{
				newLeafNode(otherlv_22, grammarAccess.getExprBaseAccess().getRightParenthesisKeyword_7_3());
			}
		)
	)
;

RULE_SYMBOL : 'a'..'z' ('A'..'Z'|'a'..'z'|'0'..'9')* ('!'|'?')?;

RULE_VARIABLE : 'A'..'Z' ('A'..'Z'|'a'..'z'|'0'..'9')* ('!'|'?')?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
